From b3f048e1d74351fdfba2b15ea017a5dc06f4c5e8 Mon Sep 17 00:00:00 2001
From: Riddhi Halani <75210944+Riddhi2303@users.noreply.github.com>
Date: Thu, 7 Nov 2024 13:58:21 +0530
Subject: [PATCH] changes of toc

---
 assets/css/main.css                           |   6 +
 blog/components/blog/blog-sidebar.vue         |  13 +-
 blog/components/blog/blog-toc.vue             | 274 ++++++++++++++++++
 blog/pages/[type]/[slug].vue                  |  55 +++-
 .../features/elasticsearch-compatibility.vue  |   2 +-
 5 files changed, 339 insertions(+), 11 deletions(-)
 create mode 100644 blog/components/blog/blog-toc.vue

diff --git a/assets/css/main.css b/assets/css/main.css
index d2e440a..8cb1a88 100644
--- a/assets/css/main.css
+++ b/assets/css/main.css
@@ -15,6 +15,12 @@
 
 }
 
+html {
+  scroll-behavior: smooth;
+  scroll-padding-top: var(--nav-bar-top-margin);
+
+}
+
 body {
   font-family: "Roboto",Arial,sans-serif !important;
   color: var(--theme-color-text-primary);
diff --git a/blog/components/blog/blog-sidebar.vue b/blog/components/blog/blog-sidebar.vue
index 68fe26a..ffa75aa 100644
--- a/blog/components/blog/blog-sidebar.vue
+++ b/blog/components/blog/blog-sidebar.vue
@@ -203,16 +203,21 @@ const { type } = defineProps({
 const { data: authorsTemp } = await useAsyncData(`${type}-authors`, () =>
   queryContent(`/${getContentFolder(type)}/authors`).findOne()
 );
-const authors = authorsTemp?.value.authors;
+const authors = authorsTemp?.value.authoractiveTocIds;
 
 // get categories
-let { data: categories } = await useAsyncData(`${type}-categories`,() => getCategories(type));
+let { data: categories } = await useAsyncData(`${type}-categories`, () =>
+  getCategories(type)
+);
 
 // get tags
-let { data: tags } = await useAsyncData(`${type}-tags`,() => getTags(type));
+let { data: tags } = await useAsyncData(`${type}-tags`, () => getTags(type));
 
 // get recentArticles
-let { data: recentArticles } = await useAsyncData(`${type}-recent-articles`,() => getRecentArticles(type));
+let { data: recentArticles } = await useAsyncData(
+  `${type}-recent-articles`,
+  () => getRecentArticles(type)
+);
 
 const formatDate = (date) => {
   const options = { year: "numeric", month: "long", day: "numeric" };
diff --git a/blog/components/blog/blog-toc.vue b/blog/components/blog/blog-toc.vue
new file mode 100644
index 0000000..e02b24d
--- /dev/null
+++ b/blog/components/blog/blog-toc.vue
@@ -0,0 +1,274 @@
+<template>
+  <div class="-mx-8 w-3/12 hidden lg:block overflow-y-auto h-screen sticky top-24 scrollbar">
+    <div class="">
+      <div class="mt-1 px-6">
+        <h4 class="mb-4 text-xl font-medium text-gray-700">
+          Table of Contents
+        </h4>
+        <aside class="ml-2">
+          <ul>
+            <li class="" v-for="link of article.body.toc.links" :key="link.id" :id="link.id">
+              <a
+                :class="{
+                  'text-sky-500': activeTocId.has(link.id) || link.id === lastActiveTocId,
+                  'text-gray-700': link.id !== activeTocId,
+                }"
+                role="button"
+                class="duration-75 text-sm mb-1.5 block hover:text-sky-500"
+                :href="`#${link.id}`"
+                >{{ link.text }}</a
+                >
+              <ul>
+                <li class="" v-for="link2 of link.children" :key="link2.id" :id="link2.id">
+                  <a
+                    :class="{
+                      'text-sky-500': activeTocId.has(link2.id) || link2.id === lastActiveTocId,
+                      'text-gray-700': link2.id !== activeTocId,
+                      'pl-4': link2.depth === 3,
+                    }"
+                    role="button"
+                    class="duration-75 text-sm mb-1.5 block hover:text-sky-500"
+                    :href="`#${link2.id}`"
+                    >{{ link2.text }}</a
+                    >
+                </li>
+              </ul>
+            </li>
+          </ul>
+        </aside>
+      </div>
+      <div v-if="false" class="mt-1 px-8">
+        <h4 class="mb-4 text-xl font-medium text-gray-700">Categories</h4>
+        <div
+          class="flex flex-col bg-white px-4 py-6 max-w-sm mx-auto rounded-lg border"
+        >
+          <ul>
+            <li
+              v-for="(category, index) in categories"
+              :key="index"
+              class="mb-2"
+            >
+              <nuxt-link
+                :to="`/${type}/category/${category.slug}`"
+                class="text-gray-700"
+              >
+                <div class="flex flex-row">
+                  <div>&gt;&nbsp;&nbsp;</div>
+                  <div
+                    class="hover:text-theme-primary transition-all duration-200"
+                  >
+                    {{ category.name }}
+                    <span
+                      class="
+                        ml-1
+                        px-2
+                        py-1
+                        bg-gray-300
+                        text-theme-text-primary
+                        rounded-full
+                        text-xs
+                        h-4
+                        w-4
+                      "
+                    >
+                      {{ category.postCount }}
+                    </span>
+                  </div>
+                </div>
+              </nuxt-link>
+            </li>
+          </ul>
+        </div>
+      </div>
+      <!-- <div class="mt-10 px-8">
+        <h4 class="mb-4 text-xl font-medium text-gray-700">Archives</h4>
+        <div
+          class="
+            flex flex-col
+            bg-white
+            max-w-sm
+            mx-auto
+            rounded-lg
+          "
+        >
+          <select
+            v-model="dataVariables.selectedMonth"
+            name="archiveMonths"
+            id="archiveMonths"
+            class="py-2 mb-2 border rounded px-2"
+          >
+            <option disabled value="">Select</option>
+            <option
+              v-for="(month, index) in archiveMonths"
+              :key="index"
+              :value="month"
+            >
+              {{ formatMonth(month) }}
+            </option>
+          </select>
+          <ul>
+            <li
+              v-for="(article, index) in currentSelectedMonthArticles"
+              :key="index"
+              class="mb-2"
+            >
+              <nuxt-link
+                :to="'/blog/' + article.slug"
+                class="text-gray-700 font-normal"
+              >
+                <div class="flex flex-row">
+                  <div>&gt;&nbsp;&nbsp;</div>
+                  <div
+                    class="hover:text-theme-primary transition-all duration-200"
+                  >
+                    {{ article.title }}
+                  </div>
+                </div>
+              </nuxt-link>
+            </li>
+          </ul>
+        </div>
+      </div> -->
+      <div class="mt-10 px-8">
+        <h4 class="mb-4 text-xl font-medium text-gray-700">Recent Posts</h4>
+        <div class="max-w-sm mx-auto">
+          <div
+            v-for="(article, index) in recentArticles"
+            :key="index"
+            class="flex flex-col py-2 mb-5"
+          >
+            <div class="">
+              <nuxt-link
+                :to="`/${type}/${article.slug}`"
+                class="text-base text-gray-700 font-normal hover:text-theme-primary transition-all duration-150"
+              >
+                {{ article.title }}
+              </nuxt-link>
+            </div>
+            <div class="flex justify-between items-center mt-4">
+              <div class="flex items-center">
+                <nuxt-link
+                  :to="`/${type}/author/${article.authors?.[0]}`"
+                  class="text-gray-700 text-sm font-light mr-3 hover:underline"
+                >
+                  {{
+                    authors?.find((a) => a.slug == article?.authors?.[0])?.name
+                  }}
+                  {{
+                    article.authors?.length > 1
+                      ? " (+" + (article.authors.length - 1) + ")"
+                      : ""
+                  }}
+                </nuxt-link>
+              </div>
+              <span class="font-light text-sm text-gray-600">
+                {{ formatDate(article.publishDate) }}
+              </span>
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+</template>
+
+<script setup>
+const { type, article,activeTocId,lastActiveTocId } = defineProps({
+  type: {
+    type: String,
+    required: true,
+  },
+  article: {
+    type: Object,
+    required: true,
+  },
+  activeTocId: {
+    type: String,
+    required: true,
+  },
+  lastActiveTocId: {
+    type: String,
+    required: true,
+  }
+});
+const { data: authorsTemp } = await useAsyncData(`${type}-authors`, () =>
+  queryContent(`/${getContentFolder(type)}/authors`).findOne()
+);
+const authors = authorsTemp?.value.authoractiveTocIds;
+
+// get categories
+let { data: categories } = await useAsyncData(`${type}-categories`, () =>
+  getCategories(type)
+);
+
+// get recentArticles
+let { data: recentArticles } = await useAsyncData(
+  `${type}-recent-articles`,
+  () => getRecentArticles(type)
+);
+
+const formatDate = (date) => {
+  const options = { year: "numeric", month: "long", day: "numeric" };
+  return new Date(date).toLocaleDateString("en", options);
+};
+
+const getAuthorImage = (author) => {
+  // return author.img;
+  return author.img && `/img/${type}/${author.img}`;
+};
+
+const formatMonth = (monthYear) => {
+  if (monthYear === "") {
+    return "";
+  }
+  const [year, month] = monthYear.split("-");
+  const months = [
+    "January",
+    "February",
+    "March",
+    "April",
+    "May",
+    "June",
+    "July",
+    "August",
+    "September",
+    "October",
+    "November",
+    "December",
+  ];
+
+  return months[parseInt(month) - 1] + ", " + year;
+};
+</script>
+
+<style>
+.scrollbar::-webkit-scrollbar-track {
+  -webkit-box-shadow: inset 0 0 6px rgb(221, 219, 219);
+  border-radius: 10px;
+  background-color: #f8f6f6;
+}
+
+.scrollbar::-webkit-scrollbar {
+  width: 4px;
+}
+
+.scrollbar::-webkit-scrollbar-thumb {
+  border-radius: 10px;
+  -webkit-box-shadow: inset 0 0 6px rgb(245, 244, 244);
+  background-color: #808080;
+}
+
+/* Small device styles */
+@media (max-width: 768px) {
+  .scrollbar::-webkit-scrollbar {
+    height: 0px; /* Adjust the height for small devices */
+  }
+}
+
+/* Large device styles */
+@media (min-width: 769px) {
+  .scrollbar::-webkit-scrollbar {
+    height: 0px; /* Adjust the height for large devices */
+  }
+}
+</style>
diff --git a/blog/pages/[type]/[slug].vue b/blog/pages/[type]/[slug].vue
index 85cddcd..fd7fe68 100644
--- a/blog/pages/[type]/[slug].vue
+++ b/blog/pages/[type]/[slug].vue
@@ -48,10 +48,12 @@
           :alt="article.alt"
         />
 
-        <ContentRenderer
-          :value="article"
-          class="prose prose-lg prose-slate max-w-none text-base"
-        />
+        <div  ref="nuxtContent">
+          <ContentRenderer
+            :value="article"
+            class="prose prose-lg prose-slate max-w-none text-base"
+          />
+        </div>
 
         <div class="border my-6"></div>
 
@@ -107,7 +109,12 @@
           </div>
         </figure>
       </article>
-      <blog-sidebar :type="type"/>
+      <blog-toc
+        :type="type"
+        :article="article"
+        :activeTocId="activeSection"
+        :lastActiveTocId="lastActiveSection"
+      ></blog-toc>
     </div>
   </div>
 </template>
@@ -116,6 +123,9 @@
 const route = useRoute();
 const slug = route.params.slug;
 const type = route.params.type;
+const activeSection = ref(new Set());
+const lastActiveSection = ref(null);
+const nuxtContent = ref(null);
 
 const { data: article } = await useAsyncData(`${type}-${slug}`, () =>
   queryContent(`${getContentFolder(type)}/posts/${slug}`).findOne()
@@ -124,11 +134,44 @@ const { data: article } = await useAsyncData(`${type}-${slug}`, () =>
 const { data: authorsTemp } = await useAsyncData(() =>
   queryContent(`${getContentFolder(type)}/authors`).findOne()
 );
+
+const observer = ref(null);
+const observerOptions = reactive({
+  root: nuxtContent.value,
+  threshold: 0,
+});
+
+onMounted(() => {
+  observer.value = new IntersectionObserver((entries) => {
+    entries.forEach((entry) => {
+      const id = entry.target.getAttribute("id");
+      if (entry.isIntersecting) {
+        activeSection.value.add(id);
+        lastActiveSection.value = id;
+      } else {
+        activeSection.value.delete(id);
+      }
+    });
+  }, observerOptions);
+
+  document
+    .querySelectorAll(".blog-content h2[id], .blog-content h3[id]")
+    .forEach((section) => {
+      observer.value?.observe(section);
+    });
+});
+
+onUnmounted(() => {
+  observer.value?.disconnect();
+});
+
 const author = authorsTemp?.value?.authors?.find(
   (a) => a.slug == article?.value?.author
 );
 
-const postAuthors = article?.value?.authors.map((a) => authorsTemp?.value?.authors?.find((b) => b.slug == a))
+const postAuthors = article?.value?.authors.map((a) =>
+  authorsTemp?.value?.authors?.find((b) => b.slug == a)
+);
 
 const { data: prevNext } = await useAsyncData("prev-next-" + slug, () =>
   queryContent(`${getContentFolder(type)}/posts`)
diff --git a/pages/features/elasticsearch-compatibility.vue b/pages/features/elasticsearch-compatibility.vue
index 1e5d08c..43002ed 100644
--- a/pages/features/elasticsearch-compatibility.vue
+++ b/pages/features/elasticsearch-compatibility.vue
@@ -7,7 +7,7 @@
       class="container mx-auto flex flex-col md:flex-row justify-between items-center py-4 space-y-4 md:space-y-0"
     >
       <p>{{ data.contactus.desc }}</p>
-      <Button>{{ data.contactus.btn }}</Button>
+      <Button to="/contactus">{{ data.contactus.btn }}</Button>
     </div>
   </div>
   <LatestBlogPosts />
-- 
2.46.0.windows.1

